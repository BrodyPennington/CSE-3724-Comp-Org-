// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
        // much like the RAM512, the DMux seperates the load signal into 8 seperate load signals for each RAM512 block based on the higher 3 bits of the address
        // Only one load signal can be high at a time, meaning only one block can be written to at a time
        DMux8Way(in=load, sel=address[9..11], a=load0, b=load1, c=load2, d=load3, e=load4, f=load5, g=load6, h=load7);
        
        // each RAM512 block can store 512 different 16-bit values
        // the lower 9 bits of the address are used to address 16-bit values within each RAM512
        RAM512(in=in, load=load0, address=address[0..8], out=out0);
        RAM512(in=in, load=load1, address=address[0..8], out=out1);
        RAM512(in=in, load=load2, address=address[0..8], out=out2);
        RAM512(in=in, load=load3, address=address[0..8], out=out3);
        RAM512(in=in, load=load4, address=address[0..8], out=out4);
        RAM512(in=in, load=load5, address=address[0..8], out=out5);
        RAM512(in=in, load=load6, address=address[0..8], out=out6);
        RAM512(in=in, load=load7, address=address[0..8], out=out7);

        // this Mux gate selects which of the 8 RAM512 block's outputs will be routed to out
        // the selection is based on the higher 3 bit address.
        Mux8Way16(a=out0, b=out1, c=out2, d=out3, e=out4, f=out5, g=out6, h=out7, sel=address[9..11], out=out); 

}